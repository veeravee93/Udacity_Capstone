version: 2.1

orbs:
  aws-eks: circleci/aws-eks@1.1.0
  kubernetes: circleci/kubernetes@0.12.0

jobs:
  install-lint:
    docker:
      - image: python:3.7.3-stretch
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      # run lints!
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint

  build-upload-image:
    docker:
      - image: circleci/node:14 # Use a CircleCI Docker image as the build environment
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.7 # Use the appropriate Docker version

      # Build the Docker image
      - run:
          name: Build Docker Image
          command: docker build -t harishbabua/capstone:latest .

      # Log in to Docker Hub
      - run:
          name: Log in to Docker Hub
          command: |
            echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin

      # Push the Docker image to Docker Hub
      - run:
          name: Push Docker Image to Docker Hub
          command: docker push harishbabua/capstone:latest

  deploy:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          capstone1
        type: string
      aws-region:
        description: |
          us-east-2
        type: string
    steps:
      - checkout
      - kubernetes/install
      - run:
          name: install IAM Authneticator
          command: |
            curl -o aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.21.2/2021-07-05/bin/linux/amd64/aws-iam-authenticator
            chmod +x ./aws-iam-authenticator
            sudo mv ./aws-iam-authenticator /usr/local/bin/
            export PATH=$PATH:/usr/local/bin
            echo aws-iam-authenticator version
      - run:
          name: Install the eksctl tool
          command: |
            if which eksctl > /dev/null; then
              echo "eksctl is already installed"
              exit 0
            fi
            mkdir -p eksctl_download
            curl --silent --location --retry 5 "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" \
              | tar xz -C eksctl_download
            chmod +x eksctl_download/eksctl
            SUDO=""
            if [ $(id -u) -ne 0 ] && which sudo > /dev/null ; then
              SUDO="sudo"
            fi
            $SUDO mv eksctl_download/eksctl /usr/local/bin/
            rmdir eksctl_download
      - aws-eks/create-cluster:
          cluster-name: << parameters.cluster-name >>
          aws-region: <<parameters.aws-region >>
      - run:
          name: Deploying application to EKS
          command: |
            aws eks --region us-east-2 update-kubeconfig --name capstone1
            kubectl config use-context arn:aws:eks:us-east-2:362499841092:cluster/capstone1
            kubectl apply -f deployment.yml
            kubectl get pods
            kubectl get services
workflows:
  default:
    jobs:
      - install-lint
      - build-upload-image:
          requires: [install-lint]
      - deploy:
          requires: [build-upload-image]
          cluster-name: capstone1
          aws-region: us-east-2
